{"version":3,"sources":["components/ProfileRender/profilerender.module.css","components/DrowFriend/drowfriend.module.css","components/DrowStats/drowstats.module.css","components/SocialProfile/SocialProfile.module.css","components/Stats/stats.module.css","components/FriendList/frendlist.module.css","components/DrowTrsnsaction/drowtransaction.module.css","components/ProfileRender/ProfileRender.js","userObj.js","components/SocialProfile/SocialProfile.js","components/DrowStats/DrowStats.js","statsArr.js","components/Stats/Stats.js","components/DrowFriend/DrowFriend.js","components/FriendList/FriendList.js","components/DrowTrsnsaction/DrowTrsnsaction.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","ProfileRender","user","className","styles","profile","src","avatar","alt","name","tag","location","stats","statsItem","label","quantity","followers","views","likes","SocialProfile","socialprofile","DrowStats","title","statList","map","elem","key","id","item","style","backgroundColor","Math","random","toString","substr","percentage","defaultProps","Stats","statsSection","statsArr","DrowFriend","frends","frendlist","isOnline","online","offline","width","FriendList","friendlist","DrowTrsnsaction","transaction","table","row","align","valign","type","amount","currency","TransactionHistory","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9e2cf7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profilerender_profile__1LM0T\",\"avatar\":\"profilerender_avatar__2NbKC\",\"tag\":\"profilerender_tag__FZkqa\",\"location\":\"profilerender_location__2YBqc\",\"stats\":\"profilerender_stats__3hXb3\",\"statsItem\":\"profilerender_statsItem__34kpa\",\"label\":\"profilerender_label__2MJDL\",\"quantity\":\"profilerender_quantity__1S0Vo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frendlist\":\"drowfriend_frendlist__4lGiQ\",\"item\":\"drowfriend_item__mTctT\",\"online\":\"drowfriend_online__26Xvf\",\"offline\":\"drowfriend_offline__D70eu\",\"avatar\":\"drowfriend_avatar__14lsN\",\"name\":\"drowfriend_name__3nOIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"drowstats_title__1nFj5\",\"statList\":\"drowstats_statList__3ha6M\",\"item\":\"drowstats_item__3G7I5\",\"label\":\"drowstats_label__3k1sD\",\"percentage\":\"drowstats_percentage__3YNZu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialprofile\":\"SocialProfile_socialprofile__2lRCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"stats_statsSection__1GFL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendlist\":\"frendlist_friendlist__NPww6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"drowtransaction_table__3xfuQ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './profilerender.module.css';\n\nconst ProfileRender = ({ user }) => {\n  return (\n    <div className={styles.profile}>\n      <div className=\"description\">\n        <img src={user.avatar} alt=\"user avatar\" className={styles.avatar} />\n        <h3 className=\"name\">{user.name}</h3>\n        <p className={styles.tag}>@{user.tag}</p>\n        <p className={styles.location}>{user.location}</p>\n      </div>\n      <ul className={styles.stats}>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{user.stats.followers}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{user.stats.views}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{user.stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfileRender.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProfileRender;\n","export default {\n  name: 'Jacques Gluke',\n  tag: 'jgluke',\n  location: 'Ocho Rios, Jamaica',\n  avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\n  stats: {\n    followers: 5603,\n    views: 4827,\n    likes: 1308,\n  },\n};\n","import React from 'react';\nimport ProfileRender from '../ProfileRender/ProfileRender';\nimport user from '../../userObj';\nimport styles from './SocialProfile.module.css';\n\nconst SocialProfile = () => {\n  return (\n    <section className={`${styles.socialprofile} container`}>\n      <ProfileRender user={user} />\n    </section>\n  );\n};\n\nexport default SocialProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './drowstats.module.css';\n\nconst randomColor = function randomColor() {\n  // eslint-disable-next-line no-bitwise\n  return `#${((Math.random() * 0x1000000) | 0x1000000).toString(16).substr(1)}`;\n};\n\nconst DrowStats = ({ title, stats }) => {\n  return (\n    <>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      <ul className={styles.statList}>\n        {stats.map(elem => (\n          <li\n            key={elem.id}\n            className={styles.item}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={styles.label}>{elem.label}</span>\n            <span className={styles.percentage}>{elem.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nDrowStats.defaultProps = {\n  title: '',\n};\n\nDrowStats.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default DrowStats;\n","export default [\n  { id: 'id-1', label: '.docx', percentage: 22 },\n  { id: 'id-2', label: '.pdf', percentage: 4 },\n  { id: 'id-3', label: '.mp3', percentage: 17 },\n  { id: 'id-4', label: '.psd', percentage: 47 },\n  { id: 'id-5', label: '.pdf', percentage: 10 },\n];\n","import React from 'react';\nimport DrowStats from '../DrowStats/DrowStats';\nimport statsArr from '../../statsArr';\nimport styles from './stats.module.css';\n\nconst title = 'upload stats';\nconst Stats = () => {\n  return (\n    <section className={`${styles.statsSection} container`}>\n      <DrowStats title={title} stats={statsArr} />\n    </section>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './drowfriend.module.css';\n\nconst DrowFriend = ({ frends }) => {\n  return (\n    <ul className={styles.frendlist}>\n      {frends.map(item => (\n        <li key={item.id} className={styles.item}>\n          <span className={item.isOnline ? styles.online : styles.offline} />\n          <img\n            className={styles.avatar}\n            src={item.avatar}\n            alt={`${item.name} - ${item.isOnline ? 'Online' : 'Offline'}`}\n            width=\"60\"\n          />\n          <p className={styles.name}>{item.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nDrowFriend.propTypes = {\n  frends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default DrowFriend;\n","import React from 'react';\nimport DrowFriend from '../DrowFriend/DrowFriend';\nimport frends from '../../friends.json';\nimport styles from './frendlist.module.css';\n\nconst FriendList = () => {\n  return (\n    <section className={`${styles.friendlist} container`}>\n      <DrowFriend frends={frends} />\n    </section>\n  );\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './drowtransaction.module.css';\n\nconst DrowTrsnsaction = ({ transaction }) => {\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transaction.map(row => (\n          <tr key={row.id}>\n            <td align=\"center\" valign=\"middle\">\n              {row.type}\n            </td>\n            <td align=\"center\" valign=\"middle\">\n              {row.amount}\n            </td>\n            <td align=\"center\" valign=\"middle\">\n              {row.currency}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nDrowTrsnsaction.propTypes = {\n  transaction: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default DrowTrsnsaction;\n","import React from 'react';\nimport DrowTrsnsaction from '../DrowTrsnsaction/DrowTrsnsaction';\nimport transaction from '../../transactions.json';\n\nconst TransactionHistory = () => {\n  return (\n    <section className=\"container\">\n      <DrowTrsnsaction transaction={transaction} />\n    </section>\n  );\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport SocialProfile from './SocialProfile/SocialProfile';\nimport Stats from './Stats/Stats';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nconst App = () => (\n  <>\n    <SocialProfile />\n    <hr />\n    <Stats />\n    <hr />\n    <FriendList />\n    <hr />\n    <TransactionHistory />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}